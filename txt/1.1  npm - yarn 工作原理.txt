-------------------------------- 版本 --------------------------------
node：10.15.2
npm： 6.4.1
yarn：1.12.3


-------------------------------- 测试 --------------------------------
1.  demo

	A：react-router@3.2.1
	B：react-router-native@4.3.0
	C：react-router-dom@4.3.1

2.  lock 锁定文件版本

3.  npm：串行下载

	1.  node_modules模块：安装|更新 & 卸载，依赖 & 被依赖

		1.  安装&更新：会检查是否已安装全局，及正在引用全局版本的模块

			1.  本身的依赖(dependencies)：会新增全局模块或本地模块

				1.  全局不存在：全局安装，requires 引用
				2.  全局存在且版本相同：requires 引用
				3.  全局存在且版本不相同：本地安装

			2.  全局未存在：不会对其余模块现有配置产生任何影响

				1.  本模块不被任何模块所依赖
				2.  本模块被某些模块所依赖: 开始时全局安装，后来本模块本身修改版本，不再被其他所依赖，又删除了本模块

			3.  全局已存在：证明本模块可能已被其他模块所引用

				1.  安装和全局同一版本：本模块在 package.json 上显示，整体不动
				2.  安装和全局不同版本：全局的版本更新，引用全局的模块，其模块的内部安装依赖版本

		2.  卸载

			1.  未被其他模块所依赖：则 package.json 上删除，node_modules 删除

			2.  已被其他模块所依赖：则是 package.json 上隐藏，整体不动

			3.  本身的依赖：内部的全部删除，如果存在引用全局的，是否只被本模块引用，如果是就连带删除，不是则不管


4.  yarn：并行下载

	1.  文件全部打散

	2.  同个模块主版本不一样分开

	3.  通过模块主版本一样放一起，独立安装在前，低版本在前，如果独立和最低引用版本一样分两个

	4.  具体情况具体分析


----------------------------------------------
node_modules
├── A
├── somelib 1.4.x
├── B
│   └── node_modules
│       └── somelib 1.6.x
└── C
    └── node_modules
        └── somelib 1.6.x