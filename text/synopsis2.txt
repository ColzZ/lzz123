1. 安装GIT

2. 新建项目文件夹

3. 项目 根目录 右键GIT  Bash  here

$ git init 	//创建本地


GIT有三个大区的状态（工作区，暂存区，版本区） | （untracked，unstaged，uncommited）
工作区(Working Directory)
暂存区(stage/index)
版本区(Repository)


$ git status  				//查看 根目录里面的文件 状态（工作区，暂存区）
$ git add <file>/<dir>			//工作区文件  -->  暂存区
$ git commit -m  "中文备注"		//暂存区文件  -->  版本区
$ git log 				//就是查看 git 提交记录
$ git log --pretty=oneline		//（显示简要信息 id+备注）
$ git log --pretty=oneline --abbrev-commit//仅仅提示前几位commit
$ git log --graph			//查看分支

CTRL+C 很关键 清除之前的乱乱东西 重新输入命令

// <!----
	颜色区分区
	红色/绿色：
		
		1.untracked 	红色：未追踪状态（从未把文件添加版本库/暂存区）
		2.new file： 	绿色 就是添加到了暂存区、没有添加到版本区
		3.modified  	红色：之前已经添加到（版本库/暂存区），并且后面修改的
				绿色：表示文件添加过版本区，并且改动了，又再次add到暂存区，而没有添加到版本区
		4.提交到了版本区后，不改动、添加，暂存区不会有东西。

	？？？	5.deleted：删除文件、找不到了

		#.未添加的文件  即使add 就是没有被管理的 不受git管理

// ---->


版本回退
$ git reset HEAD 最近的提交记录
$ git reset HEAD^ 前一个提交记录 ^^^^^多少个就是前多少记录   ~  前100提交jilu

$ git reset （commit码）//可以回任意版本号  找到commit版本  回到当时 然后后缀有影响回到什么程度

	--hard  ：版本区，暂存区，工作区同时回退
	--mixed ：版本区，暂存区回退（默认）
	--soft  ：仅仅回退版本库里面的文件，暂存区不会改变

< ----- >
git_2.exe  (11000帧 —— 13000帧)  
 8.撤销修改 
$git checkout --<file>   	:放弃工作区的修改（工作区删除，修改了可以回来）
$git rm --cache --<file> 	:撤销暂存区的修改（添加暂存区错误了，可以修改回来）
$git reset HEAD --<file> 	:撤销暂存区的修改


				< ----------------   github   ----------- >

git_2.exe  （15500  19732 28000）

（1）	建立远程连接 注册账号之后 点击setting里面SSH and GPG keys --> New SSH key
	$ git ssh-keygen -t rsa -C '511361456@qq.com' 在磁盘C用户 找到 .ssh文件 获得钥匙  把钥匙放在新建立的github库里面

（2）	$ ssh -T git@github.com  测试是否成功
	Hi liuqaq! You've successfully authenticated, but GitHub does not provide shell access. 链接成功

（3）	1 点击加号 New repository 建立远程仓库  输入名字和说明 要点击 README 建立远程仓库
 	
	2 【建立文件夹】(gittest)  在里面  按右键 G B H 
		输入 $ git clone [远程仓库SSH地址]  获取远程仓库文件
		在里面进行增删改查	
	3 【连接本地和远程】  打开项目clone下来的文件夹  里面 按右键 G B H 
		输入 $ git remote 	/检查是否有分支
		输入 $ git remote -v   	/会输出两句话
		-输入 $ git remote origin(远程主机名) [远程仓库SSH地址]
		-输入 $ git remote   	/会默认输出 origin    
		-输入 $ git remote -v   	/会输出两句话
	4 【拉取合并】推送前 需要同步
		-输入 $ git pull origin(远程主机名) master(远程分知名:本地分知名)
	5 【可以提交文件了】
		1. $ git status 
		2. $ git add [文件名] 	/ --> 文件至暂存区
		3. $ git commit -m "说明不可全是数字"	/添加版本库
		4. $ git push -u origin master		/第一次推送要加 -u
		   $ git push origin master		/继续推送操作


//-->
（1）	建立修改文件推送到上面去
	0. $ git status 检查状态 |  $ git brancn 检查是否有别的分支
	1. $ git init				/初始化					
	2. 新建修改文件 			/文件操作
	3. $ git add [推动文件名/ 全部.]	/添加到暂存区
	4. $ git commit -m "说明不可全是数字"	/添加版本库
	5. $ git remote add origin [远程仓库名]	/链接远程仓库
	6. $ git pull origin master		/开始或不一样 要把远程仓库先拉下来
	7. $ git push -u origin master		/第一次推送要加 -u
	   $ git push origin master		/继续推送操作

//-->
（4）	分支操作
	$ git branch 	列出所有分支 当前分支绿色有一个* 当前所有改的动心都在当前分支
	$ git branch (name) 	就是创建新的分支
	$ git branch -d (name)	删除分支
	$ git checkout (name) 	切换到分支
	$ git merge （分支name）把分知名合并到当前分支
	很多实际开发中  基于已经有的去建立自己的分支

//-->

（1）	让文件可以在网页上浏览
	$ git fetch
	$ git checkout gh-pages
	$ git push -u origin gh-pages
 